/**
 * domain: 分成(1-5)5个聚合 1.carsource(车源): 1.1 event(领域事件): 1.1.1
 * 领域事件用于聚合间或上下文间的解耦，当一个聚合完成一个逻辑之后，发送事件通知其他聚合或其他上下文响应事件，这样通过事件流完成整个业务流程 1.2 factory(工厂): 1.2.1
 * 工厂用于创建属性很多的聚合根，属性少的可以直接在聚合根上写静态构造方法 1.3 service(领域服务): 1.3.1 当业务逻辑无法单独放在聚合根实体、子实体和值对象上，需要多个领域对象协助完成时，就需要用到领域服务 1.4
 * spec(领域规范:specification): 业务校验类， 1.4.1 当业务校验很多/很复杂，需要借助于南向网关的端口完成时，可以定义一个Spec后缀的业务校验类，优点：业务校验逻辑内聚、可复用 1.4.2
 * 当聚合根借助自身属性就能完成业务校验时，可以直接写在聚合根的方法里 1.5 valobj(值对象)： 1.5.1 用于归类属性字段，内聚自身业务逻辑。 1.6 每个聚合包下，至少有一个聚合根(CarSource) 1.7
 * CarSourceUpdater: 聚合根更新器，作为聚合根数据更新的承载对象，前置数据校验，隔离命令请求入参和聚合根之间的耦合。 2.goods(渠道货品): 3.inventory(库存): 4.pricing(定价策略):
 * 5.product(渠道商品): 6.shared(聚合间的共享内核)：
 */
package com.rbgt.ddd.domain;